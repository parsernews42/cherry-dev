from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import os
import pandas as pd
from openpyxl.utils import get_column_letter
from openpyxl import load_workbook
from openpyxl.worksheet.hyperlink import Hyperlink
from openpyxl.styles import Font
import time

def extract_news():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è 100 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π —Å —Å–∞–π—Ç–∞ RIA.ru/economy/
    """
    options = webdriver.ChromeOptions()
    options.add_argument("--headless")
    driver = webdriver.Chrome(options=options)

    try:
        print("[INFO] –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É https://ria.ru/economy/")
        driver.get("https://ria.ru/economy/")
        time.sleep(1)

        # –ü—Ä–∏–Ω–∏–º–∞–µ–º cookie, –µ—Å–ª–∏ –µ—Å—Ç—å
        try:
            cookie_btn = driver.find_element(By.CLASS_NAME, "cookie-warning__accept")
            cookie_btn.click()
            print("[INFO] –ü—Ä–∏–Ω—è–ª–∏ cookie-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
            time.sleep(1)
        except:
            print("[INFO] Cookie-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

        news_data = {'name': [], 'link': [], 'date': []}
        seen_links = set()
        max_news = 100

        print("[INFO] –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
        driver.execute_script("window.scrollTo(0, document.body.scrollHeight - 300);")
        time.sleep(1)

        try:
            load_more_button = WebDriverWait(driver, 10).until(
                EC.element_to_be_clickable((By.CLASS_NAME, "list-more"))
            )
            driver.execute_script("window.scrollBy(0, 200);")
            time.sleep(0.5)
            load_more_button.click()
            print("[INFO] –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–ï—â–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'")
            time.sleep(1)
        except Exception as e:
            print(f"[WARN] –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É '–ï—â–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã': {str(e)}")

        print("[INFO] –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π...")

        for i in range(5):
            print(f"[INFO] –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ {i+1}/5")
            driver.execute_script("window.scrollTo(0, document.body.scrollHeight - 200);")
            time.sleep(1)

            try:
                load_more_button = driver.find_element(By.CLASS_NAME, "list-more")
                driver.execute_script("arguments[0].scrollIntoView();", load_more_button)
                driver.execute_script("window.scrollBy(0, -100);")
                load_more_button.click()
                print("[INFO] –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–ï—â–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'")
                time.sleep(1)
            except:
                print("[INFO] –ö–Ω–æ–ø–∫–∞ '–ï—â–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
            news_items = driver.find_elements(By.CSS_SELECTOR, "div.list-item")

            for item in news_items:
                if len(news_data['name']) >= max_news:
                    break

                try:
                    title_element = item.find_element(By.CSS_SELECTOR, "a.list-item__title")
                    title = title_element.text.strip()
                    link = title_element.get_attribute("href")

                    if not link or link in seen_links:
                        continue

                    seen_links.add(link)

                    time_element = item.find_element(By.CSS_SELECTOR, "div.list-item__info-item[data-type='date']")
                    time_text = time_element.text.strip()

                    news_data['name'].append(title)
                    news_data['link'].append(link)
                    news_data['date'].append(time_text)

                    print(f"[{len(news_data['name'])}/{max_news}] –°–æ–±—Ä–∞–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å: {title[:50]}... | –í—Ä–µ–º—è: {time_text}")

                    # üëâ –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è UI
                    progress_percentage = int((len(news_data['name']) / max_news) * 70)
                    print(f"Progress: {progress_percentage}% [{len(news_data['name'])}/{max_news}]")

                except Exception as e:
                    print(f"[WARN] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–≤–æ—Å—Ç–∏: {str(e)}")
                    continue

        print(f"[INFO] –ó–∞–≤–µ—Ä—à—ë–Ω —Å–±–æ—Ä. –°–æ–±—Ä–∞–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π: {len(news_data['name'])}")

    except Exception as e:
        print(f"[ERROR] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        raise
    finally:
        driver.quit()
        print("[INFO] –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç.")

    return news_data


def save_to_excel(news_info, output_file_name="News_data_RIA_First_100_News.xlsx"):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –≤ Excel —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞–º–∏.
    """
    print("Progress: 98% [–°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Excel]")

    # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Excel-—Ñ–∞–π–ª–æ–≤
    save_dir = os.path.join(os.getcwd(), "parsed_excels")
    os.makedirs(save_dir, exist_ok=True)

    # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –≤—ã—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É
    full_output_path = os.path.join(save_dir, output_file_name)

    print(f"[INFO] –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª {full_output_path}")

    try:
        data_for_df = {
            '–ù–∞–∑–≤–∞–Ω–∏–µ': news_info.get('name', []),
            '–°—Å—ã–ª–∫–∞': news_info.get('link', []),
            '–í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏': news_info.get('date', [])
        }

        if not any(data_for_df.values()):
            raise ValueError("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")

        df = pd.DataFrame(data_for_df)

        with pd.ExcelWriter(full_output_path, engine='openpyxl') as writer:
            df.to_excel(writer, index=False, sheet_name='–ù–æ–≤–æ—Å—Ç–∏')

            workbook = writer.book
            worksheet = writer.sheets['–ù–æ–≤–æ—Å—Ç–∏']

            for column in worksheet.columns:
                max_length = 0
                column_letter = get_column_letter(column[0].column)
                for cell in column:
                    try:
                        if len(str(cell.value)) > max_length:
                            max_length = len(str(cell.value))
                    except:
                        pass
                adjusted_width = (max_length + 2) * 1.2
                worksheet.column_dimensions[column_letter].width = adjusted_width

            for row in range(2, worksheet.max_row + 1):
                cell = worksheet.cell(row=row, column=2)
                if cell.value and isinstance(cell.value, str) and cell.value.startswith("http"):
                    cell.hyperlink = Hyperlink(ref=cell.coordinate, target=cell.value, tooltip="–ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ")
                    cell.font = Font(color="0563C1", underline="single")

        print(f"[SUCCESS] –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ '{full_output_path}'")
        print("Progress: 100% [–ì–æ—Ç–æ–≤–æ]")

    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ Excel: {str(e)}")
        raise

if __name__ == "__main__":
    try:
        print("=== –ù–ê–ß–ê–õ–û –†–ê–ë–û–¢–´ –°–ö–†–ò–ü–¢–ê ===")
        print("\n[1/2] –°–±–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π...")
        news_info = extract_news()

        print("\n[2/2] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
        save_to_excel(news_info)

        print("\n=== –°–ö–†–ò–ü–¢ –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù ===")

    except Exception as e:
        print(f"\n=== –û–®–ò–ë–ö–ê: {str(e)} ===")
